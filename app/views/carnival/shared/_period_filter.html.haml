- date_filter_field = presenter.date_filter_field
- if date_filter_field.present?
  .btn-group.col-xs-8.col-sm-8.col-md-8.col-lg-8
    %button.btn.btn-default.dropdown-toggle{type: "button", data:{toggle: "dropdown"}, aria: {haspopup: "true", expanded: "false"}}
      = t("carnival.from")
      %span.period-label-from
        = date_filter_field.date_filter_periods[date_filter_field.params[:date_filter_default]][0]
      = t("carnival.to")
      %span.period-label-to
        = date_filter_field.date_filter_periods[date_filter_field.params[:date_filter_default]][1]
      %span.caret
    .dropdown-menu.period-selector-container
      .month-period-selector.col-xs-4.col-sm-4.col-md-4.col-lg-4
      .custom-period-selector.col-xs-8.col-sm-8.col-md-8.col-lg-8
        .input-group.input-daterange
          %span.input-group-addon
            = t("carnival.from")
          %input.form-control{type: "text", id: "from_date_period",value: "#{date_filter_field.date_filter_periods[date_filter_field.params[:date_filter_default]][0]}", data:{mask: t('date.formats.mask.default')}, placeholder:  t('date.formats.placeholder.default')}
          %span.input-group-addon
            = t("carnival.to")
          %input.form-control{type: "text", id: "to_date_period", value: "#{date_filter_field.date_filter_periods[date_filter_field.params[:date_filter_default]][1]}", data:{mask: t('date.formats.mask.default')}, placeholder:  t('date.formats.placeholder.default')}
          %span.input-group-btn
            %button.btn.btn-default{type: "button"}
              = t("carnival.apply")
        .shortcut-period-selector
          %ul.nav.nav-pills
            - date_filter_field.date_filter_periods.keys.each do |period|
              %li.period-selector.col-xs-6.col-sm-6.col-md-6.col-lg-6{class: "#{date_filter_field.params[:date_filter_default] == period ? 'active' : ''}", data: {from: date_filter_field.date_filter_periods[period][0], to: date_filter_field.date_filter_periods[period][1]}}
                = link_to t("date_filter.#{period}"), "#", class: "shorcut-period"
  :javascript
    var shorcutSelected = false
    $(document).ready(function(){
      $('.month-period-selector').datepicker({
          format: "#{t('date.formats.js.default')}",
          minViewMode: 'months',
          viewMode:  'months',
          smartMonthSelect: true
      }).on("changeDate", function(e) {
        setDateLabel("from", e.format(0))
        setDateLabel("to", e.format(1))
        if(!shorcutSelected){
          cleanShortcuts();
        }
      });
      $('.custom-period-selector .input-daterange').datepicker({
        format: "#{t('date.formats.js.default')}",
        todayHighlight: true
      }).on("changeDate", function(e) {
        setDatesOnMonthCalendar($("#from_date_period").val(), $("#to_date_period").val())
      });
      $('input').each(function(index, element){
        if($(element).data('mask'))
          $(element).mask($(element).data('mask'));
      });
      $('.shorcut-period').click(function(event){
        shorcutSelected = true
        setDateLabel("from", $(this).parent().data('from'))
        setDateLabel("to", $(this).parent().data('to'))
        cleanShortcuts();
        $(this).parent().addClass('active')
        setDatesOnMonthCalendar($(this).parent().data('from'), $(this).parent().data('to'))
        event.stopPropagation()
      });
    });

    var setDateLabel = function(type, date){
      $("#" + type + "_date_period").val(date)
      $(".period-label-" + type).text(date)
    }

    var cleanShortcuts = function(){
      $("li.period-selector").removeClass('active')
    }

    var setDatesOnMonthCalendar = function(firstDate, lastDate){
      $(".month-period-selector").datepicker('setDates', firstDate, lastDate)
      $("span.month").click(function(){
        shorcutSelected = false
      });
    }
